#ifndef __MALLOC_H
#define __MALLOC_H
#include "stm32f4xx_hal.h"
#ifndef NULL
#define NULL 0
#endif
 
//???????
#define SRAMIN	 0		//?????
#define SRAMEX   1		//?????(SDRAM)
#define SRAMCCM  2		//CCM???(???SRAM??CPU????!!!)
 
 
#define SRAMBANK 	3	//?????SRAM??.	
 
 
//mem1??????.mem1??????SRAM??.
#define MEM1_BLOCK_SIZE			64  	  						//??????64??
#define MEM1_MAX_SIZE			16*1024  						//?????? 16K
#define MEM1_ALLOC_TABLE_SIZE	MEM1_MAX_SIZE/MEM1_BLOCK_SIZE 	//?????
 
//mem2??????.mem2????????SDRAM??
#define MEM2_BLOCK_SIZE			64  	  						//??????64??
#define MEM2_MAX_SIZE			28912 *1024  					//??????28912K
#define MEM2_ALLOC_TABLE_SIZE	MEM2_MAX_SIZE/MEM2_BLOCK_SIZE 	//?????
		 
//mem3??????.mem3??CCM,????CCM(????,???SRAM,?CPU????!!)
#define MEM3_BLOCK_SIZE			64  	  						//??????64??
#define MEM3_MAX_SIZE			60 *1024  						//??????60K
#define MEM3_ALLOC_TABLE_SIZE	MEM3_MAX_SIZE/MEM3_BLOCK_SIZE 	//?????
		 
 
//???????
struct _m_mallco_dev
{
	void (*init)(uint8_t);					//???
	uint16_t (*perused)(uint8_t);		  	    	//?????
	uint8_t 	*membase[SRAMBANK];				//??? ??SRAMBANK??????
	uint32_t *memmap[SRAMBANK]; 				//???????
	uint8_t  memrdy[SRAMBANK]; 				//????????
};
extern struct _m_mallco_dev mallco_dev;	 //?mallco.c????
 
void mymemset(void *s,uint8_t c,uint32_t count);	//????
void mymemcpy(void *des,void *src,uint32_t n);//????     
void my_mem_init(uint8_t memx);				//?????????(?/????)
uint32_t my_mem_malloc(uint8_t memx,uint32_t size);	//????(????)
uint8_t my_mem_free(uint8_t memx,uint32_t offset);		//????(????)
uint16_t my_mem_perused(uint8_t memx) ;			//???????(?/????) 
 
//??????
void myfree(uint8_t memx,void *ptr);  			//????(????)
void *mymalloc(uint8_t memx,uint32_t size);			//????(????)
void *myrealloc(uint8_t memx,void *ptr,uint32_t size);//??????(????)
void MycJSONfree(void *ptr);	//cJSON??????
void *MycJSONmalloc(uint32_t size);	//cJSON??????
uint16_t MycJSONmem_perused(void);	//cJSON???????
#endif
 

